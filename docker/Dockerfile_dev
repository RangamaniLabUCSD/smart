# Runs using a local copy of stubs (change directory) rather than the installed version
#
# This Dockerfile will install some additional packages on top of standard FEniCS dev image
# Some of these are necessary to run stubs, others are for convenience
# Some settings (bash aliases and vim) are also set here
#
# To build the image, run in the main stubs directory:
# $ docker build -t stubs:latest -f Dockerfile .
# To run the image (with default settings, e.g. mounting your home directory):
# $ docker run -ti --name stubs --init -p 8080:8888 -v $HOME:/home/fenics/shared stubs:latest

# Base fenics dev image
FROM quay.io/fenicsproject/dev


# ======================================================
# pull and build our forked version of dolfin 
#RUN echo "Downloading forked version of dolfin"
#RUN export FENICS_SRC_DIR=/usr/local/src && \
#    cd /usr/local/src && \
#    export GIT_LFS_SKIP_SMUDGE=1 && \
#    git clone https://github.com/justinlaughlin/dolfinstubs.git && \
#    cd dolfinstubs && \
#    git checkout my_fixes && \
#    git pull && \
#    bash -c "PIP_NO_CACHE_DIR=off \
#                /home/fenics/bin/fenics-build dolfinstubs && \
#                ldconfig"
# ======================================================



# Install desired packages using apt-get
# apt-get update and install needs to be in the same line
# libgl for visualization with vedo, mesh generation with pygmsh, etc.
# gnuplot for termplotlib
RUN apt-get update && apt-get install -y \
    curl \
    vim \
    htop \
    eog \
    python3-h5py \
    libglu1 \
    libxcursor1 \
    libxinerama1 \
    libgl1-mesa-glx \
    libgl1-mesa-dev \
    xvfb \
    sshpass \
    gnuplot && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

## bpython dev version
#RUN cd $FENICS_HOME && \
#    git clone https://github.com/bpython/bpython.git && \
#    cd bpython && \
#    python3 -m pip install typing_extensions && \
#    python3 setup.py install

# Install desired packages using pip
# *not sure why, but when run in a single line the dependencies for stubs aren't installed
# (e.g. upgrade numpy from version 13.x to 16.x)
RUN python3 -m pip install meshio
RUN python3 -m pip install pygmsh
RUN python3 -m pip install bpython
RUN python3 -m pip install gmsh
RUN python3 -m pip install vedo
RUN python3 -m pip install termplotlib

# for testing parallel stuff in ipython (~/.ipython/profile_mpi)
#RUN python3 -m pip install ipyparallel
# https://ipython.org/ipython-doc/3/parallel/parallel_process.html#using-ipcluster-in-mpiexec-mpirun-mode
# ipython profile create --parallel --profile=mpi
# ~/.ipython/profile_mpi/ipcluster_config.py
# Add line : c.IPClusterEngines.engine_launcher_class = 'MPIEngineSetLauncher'
# run with : $ ipcluster start -n 2 --profile=mpi


# PyQt5 for matplotlib
RUN python3 -m pip install PyQt5==5.12.2
ENV MPLBACKEND=QT5Agg
# For tikz plotting
RUN python3 -m pip install tikzplotlib
#RUN python3 -m pip install h5py
# this is to install just the dependencies so that we can use the local version of stubs
RUN python3 -m pip install fenics-stubs
RUN python3 -m pip uninstall --yes fenics-stubs
# now we add the local repo to the pythonpath 
ENV PYTHONPATH "${PYTHONPATH}:$FENICS_HOME/shared/gitrepos/stubs"


# bashrc settings (this appends to the top of the file)
# colored terminal and disable ctrl+S freezing screen
RUN printf \
"# colored terminal output\n\
export TERM=xterm-256color\n" | cat - $FENICS_HOME/.bashrc > temp && \
mv temp $FENICS_HOME/.bashrc

RUN echo "export LS_COLORS='ow=01;36;40'" >> $FENICS_HOME/.bashrc

# Bash aliases
RUN printf \
"# Our bash aliases\n\
alias ..='cd ..'\n\
alias ..2='cd ../..'\n\
alias ..3='cd ../../..'\n\
alias ..4='cd ../../../..'\n\
alias python='python3'\n\
alias bpython='python3 -m bpython'\n\
alias sourceme='source ~/.bashrc'\n\
alias vimbash='vim ~/.bashrc'\n\
alias vimalias='vim ~/.bash_aliases'\n\
alias cdstubs='cd ~/shared/gitrepos/stubs'\n\
alias cdpurk='cd ~/shared/gitrepos/purkinje-model'\n\
alias debug='cd ~/shared/gitrepos/stubs/debug; bpython -i debug_stubs.py'\n\
alias vimrc='vim ~/.vimrc'" >> $FENICS_HOME/.bash_aliases

# vimrc settings
RUN printf \
"\" Our vimrc settings\n\
syntax on\n\
filetype plugin indent on\n\
set tabstop=4\n\
set shiftwidth=4\n\
set expandtab\n\
set hlsearch\n\
colorscheme desert\n\
inoremap kj <Esc>\n\
vnoremap x \"_x\n\
nnoremap x \"_x\n\
vnoremap c \"_c\n\
nnoremap c \"_c\n\
set visualbell\n\
set t_vb=\n\
set number\n\
set colorcolumn=120\n\
highlight ColorColumn ctermbg=7" >> $FENICS_HOME/.vimrc

# source bashrc
RUN ["/bin/bash", "-c", "source $FENICS_HOME/.bashrc"]
#RUN cd $FENICS_SRC_DIR/dolfin
#build cmake
#build pybind11 cd $FENICS_SRC_DIR/dolfin




# dont want my email floating around on the internet 
RUN email_name="justinglaughlin"
RUN git config --global user.email "$email_name@gmail.com"
RUN git config --global user.name "justinlaughlin"

